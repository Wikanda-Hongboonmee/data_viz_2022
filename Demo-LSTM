{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOB5gnTKndBKGvzdn9aTVsI",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Wikanda-Hongboonmee/data_viz_2022/blob/main/Demo-LSTM\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LEkUJjDRogNq",
        "outputId": "ab830782-9319-47c7-f13f-652fbe10f622"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:25: FutureWarning: The pandas.datetime class is deprecated and will be removed from pandas in a future version. Import from datetime module instead.\n"
          ]
        }
      ],
      "source": [
        "# ทำการ Import libraries ที่จะนำมาใช้ในตัวแบบ LSTM\n",
        "from sklearn import preprocessing\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from sklearn.preprocessing import scale\n",
        "from sklearn.preprocessing import StandardScaler, RobustScaler, MinMaxScaler, Normalizer\n",
        "import numpy as np\n",
        "import pandas as pd # pandas เป็น Package ที่ใช้เกี่ยวกับการจัดการข้อมูลที่เป็นตาราง , เรียกใช้โดยการ import แล้วตามด้วยชื่อ Package\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "import seaborn as sns\n",
        "plt.style.use('ggplot')\n",
        "from math import sqrt\n",
        "from sklearn import metrics\n",
        "from numpy import concatenate\n",
        "from pandas import DataFrame\n",
        "from pandas import concat\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn.metrics import mean_absolute_error\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers import LSTM, Dropout, GRU, Bidirectional\n",
        "from datetime import datetime\n",
        "from pandas import datetime\n",
        "from pandas import ExcelWriter\n",
        "from pandas import ExcelFile\n",
        "from keras.models import load_model\n",
        "from pandas import read_csv\n",
        "import tensorflow\n",
        "tensorflow.random.set_seed(36)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive  # เชื่อมต่อกับ google drive ที่เราเก็บข้อมูลไว้\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8p_JmR2mo4J0",
        "outputId": "e55d6c01-a7c1-4f26-cea7-aa6386a9925f"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import os # เป็น package ที่เอาไว้จัดการไฟล์และเอาไว้ดูที่มาของไฟล์หรือ path"
      ],
      "metadata": {
        "id": "6VbYy4x-qHPh"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "path = '/content/drive/My Drive/Demo-project' #ระบุให้ชี้ไปที่โฟลเดอร์ใน google drive ที่เราเซฟไฟล์ไว้ คือ โฟลเดอร์ Demo-project"
      ],
      "metadata": {
        "id": "gtVAkOJHqJZA"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **ข้อมูลที่นำมาใช้**"
      ],
      "metadata": {
        "id": "vhAAG8V7qLXM"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**ข้อมูลชุดที่ 1** : ข้อมูลมูลค่าการส่งออกข้าว ยางพารา และมันสำปะหลังรายเดือนของประเทศไทย ข้อมูลรายเดือน ตั้งแต่เดือน มกราคม 2554 -  มีนาคม 2565\n",
        "\n",
        "ที่มาของข้อมูล : http://impexp.oae.go.th/service/export.php\n",
        "\n",
        "องค์กร : สำนักงานเศรษฐกิจการเกษตร กระทรวงเกษตรและสหกรณ์"
      ],
      "metadata": {
        "id": "WPo5-h7SqO4u"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "---\n",
        "\n",
        "\n",
        "**ข้อมูลชุดที่ 2**: อัตราแลกเปลี่ยนเฉลี่ยของธนาคารพาณิชย์ ข้อมูลรายเดือน ตั้งแต่เดือน มกราคม 2554 - มีนาคม 2565\n",
        "\n",
        "ที่มาของข้อมูล : https://www.bot.or.th/thai/statistics/financialmarkets/exchangerate/_layouts/application/exchangerate/exchangerate.aspx\n",
        "\n",
        "องค์กร : ธนาคารแห่งประเทศไทย"
      ],
      "metadata": {
        "id": "VsnPln8xqUUU"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "\n",
        "\n",
        "**ข้อมูลชุดที่ 3** : อัตราดอกเบี้ยของธนาคารพาณิชย์ ข้อมูลรายเดือน ตั้งแต่เดือน มกราคม 2554 - มีนาคม 2565\n",
        "\n",
        "ที่มาของข้อมูล : https://www.bot.or.th/thai/statistics/_layouts/application/interest_rate/in_rate.aspx\n",
        "\n",
        "องค์กร : ธนาคารแห่งประเทศไทย"
      ],
      "metadata": {
        "id": "BRfCeDbdqVVw"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "\n",
        "\n",
        "**ข้อมูลชุดที่ 4** : ราคาน้ำมันดิบ ข้อมูลรายเดือน ตั้งแต่เดือน มกราคม 2554 - มีนาคม 2565\n",
        "\n",
        "ที่มาของข้อมูล : https://th.investing.com/commodities/crude-oil\n",
        "\n",
        "องค์กร : Investing.com"
      ],
      "metadata": {
        "id": "hDEGlwqhqYHJ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "\n",
        "\n",
        "**ข้อมูลชุดที่ 5** : ข้อมูลดัชนี SET 100 ข้อมูลรายเดือน ตั้งแต่เดือน มกราคม 2554 - มีนาคม 2565\n",
        "\n",
        "ที่มาของข้อมูล : https://www.set.or.th/th/market/index/set100/overview\n",
        "\n",
        "องค์กร : Investing.com"
      ],
      "metadata": {
        "id": "KxI1cGVZqafK"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **ชุดข้อมูลที่ 1**"
      ],
      "metadata": {
        "id": "v9maFqpVqdXx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data = pd.read_excel(os.path.join(path,'export1.xlsx')) # ไฟล์ที่เราต้องการ\n",
        "data  # print data ดูว่ามันหน้าตาเป็นยังไง"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "YF6SZaPjqOB5",
        "outputId": "7f708f24-00ea-48b1-8aaa-082f9c99bd7d"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date  Months         ข้าว      ยางพารา  มันสำปะหลัง\n",
              "0    2554-01-01 00:00:00       1  15536428007  36513515829   5789775035\n",
              "1    2554-02-01 00:00:00       2  14717660237  40694496193   7440822287\n",
              "2    2554-03-01 00:00:00       3  20183614418  47683834428   8758253202\n",
              "3    2554-04-01 00:00:00       4  15096164762  31135906606   4788642446\n",
              "4    2554-05-01 00:00:00       5  21296515946  34338915105   7099610188\n",
              "..                   ...     ...          ...          ...          ...\n",
              "130  2564-11-01 00:00:00     131  12771322292  17238310426   9641096643\n",
              "131  2564-12-01 00:00:00     132  12522650304  17844354831  13270649692\n",
              "132  2565-01-01 00:00:00     133   7431170164  17374340466  11855470749\n",
              "133  2565-02-01 00:00:00     134   9675354365  16427316475  11906795209\n",
              "134  2565-03-01 00:00:00     135  10375363830  18843921424  13891294311\n",
              "\n",
              "[135 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4a8c74f6-c8cb-43d7-b929-7c18d71817c0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Months</th>\n",
              "      <th>ข้าว</th>\n",
              "      <th>ยางพารา</th>\n",
              "      <th>มันสำปะหลัง</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2554-01-01 00:00:00</td>\n",
              "      <td>1</td>\n",
              "      <td>15536428007</td>\n",
              "      <td>36513515829</td>\n",
              "      <td>5789775035</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2554-02-01 00:00:00</td>\n",
              "      <td>2</td>\n",
              "      <td>14717660237</td>\n",
              "      <td>40694496193</td>\n",
              "      <td>7440822287</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2554-03-01 00:00:00</td>\n",
              "      <td>3</td>\n",
              "      <td>20183614418</td>\n",
              "      <td>47683834428</td>\n",
              "      <td>8758253202</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2554-04-01 00:00:00</td>\n",
              "      <td>4</td>\n",
              "      <td>15096164762</td>\n",
              "      <td>31135906606</td>\n",
              "      <td>4788642446</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2554-05-01 00:00:00</td>\n",
              "      <td>5</td>\n",
              "      <td>21296515946</td>\n",
              "      <td>34338915105</td>\n",
              "      <td>7099610188</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>2564-11-01 00:00:00</td>\n",
              "      <td>131</td>\n",
              "      <td>12771322292</td>\n",
              "      <td>17238310426</td>\n",
              "      <td>9641096643</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>2564-12-01 00:00:00</td>\n",
              "      <td>132</td>\n",
              "      <td>12522650304</td>\n",
              "      <td>17844354831</td>\n",
              "      <td>13270649692</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>132</th>\n",
              "      <td>2565-01-01 00:00:00</td>\n",
              "      <td>133</td>\n",
              "      <td>7431170164</td>\n",
              "      <td>17374340466</td>\n",
              "      <td>11855470749</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>2565-02-01 00:00:00</td>\n",
              "      <td>134</td>\n",
              "      <td>9675354365</td>\n",
              "      <td>16427316475</td>\n",
              "      <td>11906795209</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>2565-03-01 00:00:00</td>\n",
              "      <td>135</td>\n",
              "      <td>10375363830</td>\n",
              "      <td>18843921424</td>\n",
              "      <td>13891294311</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>135 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4a8c74f6-c8cb-43d7-b929-7c18d71817c0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4a8c74f6-c8cb-43d7-b929-7c18d71817c0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4a8c74f6-c8cb-43d7-b929-7c18d71817c0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "## **ชุดข้อมูลที่ 2**"
      ],
      "metadata": {
        "id": "PiyI-byeqjR5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Exchange_Rate = pd.read_csv(os.path.join(path,'Exchange Rate.csv')) # ไฟล์ที่เราต้องการ\n",
        "Exchange_Rate # print data ดูว่ามันหน้าตาเป็นยังไง"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "nSBnL-BJqlMg",
        "outputId": "ce23ea1c-d639-4112-9b44-6af0acf6b077"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          Date  Months  Exchange rate\n",
              "0     1/1/2554       1        30.5839\n",
              "1     1/2/2554       2        30.7164\n",
              "2     1/3/2554       3        30.3684\n",
              "3     1/4/2554       4        30.0541\n",
              "4     1/5/2554       5        30.2456\n",
              "..         ...     ...            ...\n",
              "130  1/11/2564     131        33.0958\n",
              "131  1/12/2564     132        33.5647\n",
              "132   1/1/2565     133        33.2395\n",
              "133   1/2/2565     134        32.6737\n",
              "134   1/3/2565     135        33.2516\n",
              "\n",
              "[135 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9f1ae567-34ef-44a2-a6a8-f236039c07e7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Months</th>\n",
              "      <th>Exchange rate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1/1/2554</td>\n",
              "      <td>1</td>\n",
              "      <td>30.5839</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1/2/2554</td>\n",
              "      <td>2</td>\n",
              "      <td>30.7164</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1/3/2554</td>\n",
              "      <td>3</td>\n",
              "      <td>30.3684</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1/4/2554</td>\n",
              "      <td>4</td>\n",
              "      <td>30.0541</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1/5/2554</td>\n",
              "      <td>5</td>\n",
              "      <td>30.2456</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>1/11/2564</td>\n",
              "      <td>131</td>\n",
              "      <td>33.0958</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>1/12/2564</td>\n",
              "      <td>132</td>\n",
              "      <td>33.5647</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>132</th>\n",
              "      <td>1/1/2565</td>\n",
              "      <td>133</td>\n",
              "      <td>33.2395</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>1/2/2565</td>\n",
              "      <td>134</td>\n",
              "      <td>32.6737</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>1/3/2565</td>\n",
              "      <td>135</td>\n",
              "      <td>33.2516</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>135 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f1ae567-34ef-44a2-a6a8-f236039c07e7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9f1ae567-34ef-44a2-a6a8-f236039c07e7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9f1ae567-34ef-44a2-a6a8-f236039c07e7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **ชุดข้อมูลที่ 3**"
      ],
      "metadata": {
        "id": "IP-irV1dqog2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Interest_Rate = pd.read_csv(os.path.join(path,'Interest Rate.csv')) # ไฟล์ที่เราต้องการ\n",
        "Interest_Rate # print data ดูว่ามันหน้าตาเป็นยังไง"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "X2jxzbSZqn1h",
        "outputId": "cada0e99-28b9-448c-b7e0-a7ed9283cfc0"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          Date  Months  Interest rate\n",
              "0     1/1/2554       1           2.25\n",
              "1     1/2/2554       2           2.25\n",
              "2     1/3/2554       3           2.50\n",
              "3     1/4/2554       4           2.75\n",
              "4     1/5/2554       5           2.75\n",
              "..         ...     ...            ...\n",
              "130  1/11/2564     131           0.50\n",
              "131  1/12/2564     132           0.50\n",
              "132   1/1/2565     133           0.50\n",
              "133   1/2/2565     134           0.50\n",
              "134   1/3/2565     135           0.50\n",
              "\n",
              "[135 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3343cea2-60b8-4493-9a43-f557592d64da\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Months</th>\n",
              "      <th>Interest rate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1/1/2554</td>\n",
              "      <td>1</td>\n",
              "      <td>2.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1/2/2554</td>\n",
              "      <td>2</td>\n",
              "      <td>2.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1/3/2554</td>\n",
              "      <td>3</td>\n",
              "      <td>2.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1/4/2554</td>\n",
              "      <td>4</td>\n",
              "      <td>2.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1/5/2554</td>\n",
              "      <td>5</td>\n",
              "      <td>2.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>1/11/2564</td>\n",
              "      <td>131</td>\n",
              "      <td>0.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>1/12/2564</td>\n",
              "      <td>132</td>\n",
              "      <td>0.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>132</th>\n",
              "      <td>1/1/2565</td>\n",
              "      <td>133</td>\n",
              "      <td>0.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>1/2/2565</td>\n",
              "      <td>134</td>\n",
              "      <td>0.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>1/3/2565</td>\n",
              "      <td>135</td>\n",
              "      <td>0.50</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>135 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3343cea2-60b8-4493-9a43-f557592d64da')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3343cea2-60b8-4493-9a43-f557592d64da button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3343cea2-60b8-4493-9a43-f557592d64da');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **ชุดข้อมูลที่ 4**"
      ],
      "metadata": {
        "id": "CDIGtBEXqvYB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Oil_Price = pd.read_csv(os.path.join(path,'Oil Price.csv')) # ไฟล์ที่เราต้องการ\n",
        "Oil_Price # print data ดูว่ามันหน้าตาเป็นยังไง"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "zpjQjpC6qzhn",
        "outputId": "80117725-19c7-477f-e668-93de0d9ef98d"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Date  Months  Oil Price\n",
              "0    1/1/2554     1.0      58.20\n",
              "1    1/2/2554     2.0      57.07\n",
              "2    1/3/2554     3.0      36.00\n",
              "3    1/4/2554     4.0      36.21\n",
              "4    1/5/2554     5.0      36.28\n",
              "..        ...     ...        ...\n",
              "133  1/2/2565   134.0      48.75\n",
              "134  1/3/2565   135.0      53.36\n",
              "135       NaN     NaN      54.79\n",
              "136       NaN     NaN      56.52\n",
              "137       NaN     NaN      51.58\n",
              "\n",
              "[138 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c757deda-3b22-4ed8-91b5-216b066e27e9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Months</th>\n",
              "      <th>Oil Price</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1/1/2554</td>\n",
              "      <td>1.0</td>\n",
              "      <td>58.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1/2/2554</td>\n",
              "      <td>2.0</td>\n",
              "      <td>57.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1/3/2554</td>\n",
              "      <td>3.0</td>\n",
              "      <td>36.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1/4/2554</td>\n",
              "      <td>4.0</td>\n",
              "      <td>36.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1/5/2554</td>\n",
              "      <td>5.0</td>\n",
              "      <td>36.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>1/2/2565</td>\n",
              "      <td>134.0</td>\n",
              "      <td>48.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>1/3/2565</td>\n",
              "      <td>135.0</td>\n",
              "      <td>53.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>54.79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>56.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>137</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>51.58</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>138 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c757deda-3b22-4ed8-91b5-216b066e27e9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c757deda-3b22-4ed8-91b5-216b066e27e9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c757deda-3b22-4ed8-91b5-216b066e27e9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **ชุดข้อมูลที่ 5**"
      ],
      "metadata": {
        "id": "gWyofsUwq41W"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "SET100_Index = pd.read_csv(os.path.join(path,'SET 100 Index.csv')) # ไฟล์ที่เราต้องการ\n",
        "SET100_Index # print data ดูว่ามันหน้าตาเป็นยังไง"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "cmyYH7SLq6s_",
        "outputId": "f151fe45-725f-40a7-d7e9-cecad3c739c1"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Date  Months  SET100Index\n",
              "0    1/1/2554     1.0      1506.94\n",
              "1    1/2/2554     2.0      1605.25\n",
              "2    1/3/2554     3.0      1682.40\n",
              "3    1/4/2554     4.0      1642.80\n",
              "4    1/5/2554     5.0      1587.31\n",
              "..        ...     ...          ...\n",
              "134  1/3/2565   135.0      2250.62\n",
              "135       NaN     NaN      2280.45\n",
              "136       NaN     NaN      2158.78\n",
              "137       NaN     NaN      2168.17\n",
              "138       NaN     NaN      2211.47\n",
              "\n",
              "[139 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9c4022b5-04d9-4934-9d54-6cc75f5348a9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Months</th>\n",
              "      <th>SET100Index</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1/1/2554</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1506.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1/2/2554</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1605.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1/3/2554</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1682.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1/4/2554</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1642.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1/5/2554</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1587.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>1/3/2565</td>\n",
              "      <td>135.0</td>\n",
              "      <td>2250.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2280.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2158.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>137</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2168.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>138</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2211.47</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>139 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c4022b5-04d9-4934-9d54-6cc75f5348a9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9c4022b5-04d9-4934-9d54-6cc75f5348a9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9c4022b5-04d9-4934-9d54-6cc75f5348a9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **รวมข้อมูลที่ต้องนำมาใช้ในการสร้างตัวแบบ LSTM เข้าด้วยกัน**"
      ],
      "metadata": {
        "id": "BsOJNtCHrBit"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "merged_1 = data.merge(Exchange_Rate, how='left', on='Months')\n",
        "merged_1.head() # print data ดูว่ามันหน้าตาเป็นยังไง"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "7DNiebtarDBy",
        "outputId": "e87d441a-3f64-4a7e-db84-569309fb8673"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                Date_x  Months         ข้าว      ยางพารา  มันสำปะหลัง  \\\n",
              "0  2554-01-01 00:00:00       1  15536428007  36513515829   5789775035   \n",
              "1  2554-02-01 00:00:00       2  14717660237  40694496193   7440822287   \n",
              "2  2554-03-01 00:00:00       3  20183614418  47683834428   8758253202   \n",
              "3  2554-04-01 00:00:00       4  15096164762  31135906606   4788642446   \n",
              "4  2554-05-01 00:00:00       5  21296515946  34338915105   7099610188   \n",
              "\n",
              "     Date_y  Exchange rate  \n",
              "0  1/1/2554        30.5839  \n",
              "1  1/2/2554        30.7164  \n",
              "2  1/3/2554        30.3684  \n",
              "3  1/4/2554        30.0541  \n",
              "4  1/5/2554        30.2456  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6832529b-a55d-470b-9549-2d29dc5e88e6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date_x</th>\n",
              "      <th>Months</th>\n",
              "      <th>ข้าว</th>\n",
              "      <th>ยางพารา</th>\n",
              "      <th>มันสำปะหลัง</th>\n",
              "      <th>Date_y</th>\n",
              "      <th>Exchange rate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2554-01-01 00:00:00</td>\n",
              "      <td>1</td>\n",
              "      <td>15536428007</td>\n",
              "      <td>36513515829</td>\n",
              "      <td>5789775035</td>\n",
              "      <td>1/1/2554</td>\n",
              "      <td>30.5839</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2554-02-01 00:00:00</td>\n",
              "      <td>2</td>\n",
              "      <td>14717660237</td>\n",
              "      <td>40694496193</td>\n",
              "      <td>7440822287</td>\n",
              "      <td>1/2/2554</td>\n",
              "      <td>30.7164</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2554-03-01 00:00:00</td>\n",
              "      <td>3</td>\n",
              "      <td>20183614418</td>\n",
              "      <td>47683834428</td>\n",
              "      <td>8758253202</td>\n",
              "      <td>1/3/2554</td>\n",
              "      <td>30.3684</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2554-04-01 00:00:00</td>\n",
              "      <td>4</td>\n",
              "      <td>15096164762</td>\n",
              "      <td>31135906606</td>\n",
              "      <td>4788642446</td>\n",
              "      <td>1/4/2554</td>\n",
              "      <td>30.0541</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2554-05-01 00:00:00</td>\n",
              "      <td>5</td>\n",
              "      <td>21296515946</td>\n",
              "      <td>34338915105</td>\n",
              "      <td>7099610188</td>\n",
              "      <td>1/5/2554</td>\n",
              "      <td>30.2456</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6832529b-a55d-470b-9549-2d29dc5e88e6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6832529b-a55d-470b-9549-2d29dc5e88e6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6832529b-a55d-470b-9549-2d29dc5e88e6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "merged_2 = merged_1.merge(Interest_Rate, how='left', on='Months')\n",
        "merged_2.head() # print data ดูว่ามันหน้าตาเป็นยังไง"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "d5WgjYsarGXO",
        "outputId": "f082ea34-98eb-4c77-a29b-ecb94339119d"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                Date_x  Months         ข้าว      ยางพารา  มันสำปะหลัง  \\\n",
              "0  2554-01-01 00:00:00       1  15536428007  36513515829   5789775035   \n",
              "1  2554-02-01 00:00:00       2  14717660237  40694496193   7440822287   \n",
              "2  2554-03-01 00:00:00       3  20183614418  47683834428   8758253202   \n",
              "3  2554-04-01 00:00:00       4  15096164762  31135906606   4788642446   \n",
              "4  2554-05-01 00:00:00       5  21296515946  34338915105   7099610188   \n",
              "\n",
              "     Date_y  Exchange rate      Date  Interest rate  \n",
              "0  1/1/2554        30.5839  1/1/2554           2.25  \n",
              "1  1/2/2554        30.7164  1/2/2554           2.25  \n",
              "2  1/3/2554        30.3684  1/3/2554           2.50  \n",
              "3  1/4/2554        30.0541  1/4/2554           2.75  \n",
              "4  1/5/2554        30.2456  1/5/2554           2.75  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-289e1eab-d1ab-42fb-864e-731b171b4848\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date_x</th>\n",
              "      <th>Months</th>\n",
              "      <th>ข้าว</th>\n",
              "      <th>ยางพารา</th>\n",
              "      <th>มันสำปะหลัง</th>\n",
              "      <th>Date_y</th>\n",
              "      <th>Exchange rate</th>\n",
              "      <th>Date</th>\n",
              "      <th>Interest rate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2554-01-01 00:00:00</td>\n",
              "      <td>1</td>\n",
              "      <td>15536428007</td>\n",
              "      <td>36513515829</td>\n",
              "      <td>5789775035</td>\n",
              "      <td>1/1/2554</td>\n",
              "      <td>30.5839</td>\n",
              "      <td>1/1/2554</td>\n",
              "      <td>2.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2554-02-01 00:00:00</td>\n",
              "      <td>2</td>\n",
              "      <td>14717660237</td>\n",
              "      <td>40694496193</td>\n",
              "      <td>7440822287</td>\n",
              "      <td>1/2/2554</td>\n",
              "      <td>30.7164</td>\n",
              "      <td>1/2/2554</td>\n",
              "      <td>2.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2554-03-01 00:00:00</td>\n",
              "      <td>3</td>\n",
              "      <td>20183614418</td>\n",
              "      <td>47683834428</td>\n",
              "      <td>8758253202</td>\n",
              "      <td>1/3/2554</td>\n",
              "      <td>30.3684</td>\n",
              "      <td>1/3/2554</td>\n",
              "      <td>2.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2554-04-01 00:00:00</td>\n",
              "      <td>4</td>\n",
              "      <td>15096164762</td>\n",
              "      <td>31135906606</td>\n",
              "      <td>4788642446</td>\n",
              "      <td>1/4/2554</td>\n",
              "      <td>30.0541</td>\n",
              "      <td>1/4/2554</td>\n",
              "      <td>2.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2554-05-01 00:00:00</td>\n",
              "      <td>5</td>\n",
              "      <td>21296515946</td>\n",
              "      <td>34338915105</td>\n",
              "      <td>7099610188</td>\n",
              "      <td>1/5/2554</td>\n",
              "      <td>30.2456</td>\n",
              "      <td>1/5/2554</td>\n",
              "      <td>2.75</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-289e1eab-d1ab-42fb-864e-731b171b4848')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-289e1eab-d1ab-42fb-864e-731b171b4848 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-289e1eab-d1ab-42fb-864e-731b171b4848');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "merged_3 = merged_2.merge(Oil_Price, how='left', on='Months')\n",
        "merged_3.head() # print data ดูว่ามันหน้าตาเป็นยังไง"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        },
        "id": "7Gcg8GtwrHyb",
        "outputId": "85a027ed-d21e-4b25-cc5b-e0db04be836f"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py:9203: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Date_x'} in the result is deprecated and will raise a MergeError in a future version.\n",
            "  validate=validate,\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                Date_x  Months         ข้าว      ยางพารา  มันสำปะหลัง  \\\n",
              "0  2554-01-01 00:00:00       1  15536428007  36513515829   5789775035   \n",
              "1  2554-02-01 00:00:00       2  14717660237  40694496193   7440822287   \n",
              "2  2554-03-01 00:00:00       3  20183614418  47683834428   8758253202   \n",
              "3  2554-04-01 00:00:00       4  15096164762  31135906606   4788642446   \n",
              "4  2554-05-01 00:00:00       5  21296515946  34338915105   7099610188   \n",
              "\n",
              "     Date_y  Exchange rate    Date_x  Interest rate    Date_y  Oil Price  \n",
              "0  1/1/2554        30.5839  1/1/2554           2.25  1/1/2554      58.20  \n",
              "1  1/2/2554        30.7164  1/2/2554           2.25  1/2/2554      57.07  \n",
              "2  1/3/2554        30.3684  1/3/2554           2.50  1/3/2554      36.00  \n",
              "3  1/4/2554        30.0541  1/4/2554           2.75  1/4/2554      36.21  \n",
              "4  1/5/2554        30.2456  1/5/2554           2.75  1/5/2554      36.28  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fc5d6a6b-2475-41ae-9547-0835ca850f64\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date_x</th>\n",
              "      <th>Months</th>\n",
              "      <th>ข้าว</th>\n",
              "      <th>ยางพารา</th>\n",
              "      <th>มันสำปะหลัง</th>\n",
              "      <th>Date_y</th>\n",
              "      <th>Exchange rate</th>\n",
              "      <th>Date_x</th>\n",
              "      <th>Interest rate</th>\n",
              "      <th>Date_y</th>\n",
              "      <th>Oil Price</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2554-01-01 00:00:00</td>\n",
              "      <td>1</td>\n",
              "      <td>15536428007</td>\n",
              "      <td>36513515829</td>\n",
              "      <td>5789775035</td>\n",
              "      <td>1/1/2554</td>\n",
              "      <td>30.5839</td>\n",
              "      <td>1/1/2554</td>\n",
              "      <td>2.25</td>\n",
              "      <td>1/1/2554</td>\n",
              "      <td>58.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2554-02-01 00:00:00</td>\n",
              "      <td>2</td>\n",
              "      <td>14717660237</td>\n",
              "      <td>40694496193</td>\n",
              "      <td>7440822287</td>\n",
              "      <td>1/2/2554</td>\n",
              "      <td>30.7164</td>\n",
              "      <td>1/2/2554</td>\n",
              "      <td>2.25</td>\n",
              "      <td>1/2/2554</td>\n",
              "      <td>57.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2554-03-01 00:00:00</td>\n",
              "      <td>3</td>\n",
              "      <td>20183614418</td>\n",
              "      <td>47683834428</td>\n",
              "      <td>8758253202</td>\n",
              "      <td>1/3/2554</td>\n",
              "      <td>30.3684</td>\n",
              "      <td>1/3/2554</td>\n",
              "      <td>2.50</td>\n",
              "      <td>1/3/2554</td>\n",
              "      <td>36.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2554-04-01 00:00:00</td>\n",
              "      <td>4</td>\n",
              "      <td>15096164762</td>\n",
              "      <td>31135906606</td>\n",
              "      <td>4788642446</td>\n",
              "      <td>1/4/2554</td>\n",
              "      <td>30.0541</td>\n",
              "      <td>1/4/2554</td>\n",
              "      <td>2.75</td>\n",
              "      <td>1/4/2554</td>\n",
              "      <td>36.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2554-05-01 00:00:00</td>\n",
              "      <td>5</td>\n",
              "      <td>21296515946</td>\n",
              "      <td>34338915105</td>\n",
              "      <td>7099610188</td>\n",
              "      <td>1/5/2554</td>\n",
              "      <td>30.2456</td>\n",
              "      <td>1/5/2554</td>\n",
              "      <td>2.75</td>\n",
              "      <td>1/5/2554</td>\n",
              "      <td>36.28</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc5d6a6b-2475-41ae-9547-0835ca850f64')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fc5d6a6b-2475-41ae-9547-0835ca850f64 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fc5d6a6b-2475-41ae-9547-0835ca850f64');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "merged_4 = merged_3.merge(SET100_Index, how='left', on='Months')\n",
        "merged_4.head() # print data ดูว่ามันหน้าตาเป็นยังไง"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "YVl9gd6ErJ1Q",
        "outputId": "f38db39a-ef7d-431b-e8db-53f03b2b2864"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                Date_x  Months         ข้าว      ยางพารา  มันสำปะหลัง  \\\n",
              "0  2554-01-01 00:00:00       1  15536428007  36513515829   5789775035   \n",
              "1  2554-02-01 00:00:00       2  14717660237  40694496193   7440822287   \n",
              "2  2554-03-01 00:00:00       3  20183614418  47683834428   8758253202   \n",
              "3  2554-04-01 00:00:00       4  15096164762  31135906606   4788642446   \n",
              "4  2554-05-01 00:00:00       5  21296515946  34338915105   7099610188   \n",
              "\n",
              "     Date_y  Exchange rate    Date_x  Interest rate    Date_y  Oil Price  \\\n",
              "0  1/1/2554        30.5839  1/1/2554           2.25  1/1/2554      58.20   \n",
              "1  1/2/2554        30.7164  1/2/2554           2.25  1/2/2554      57.07   \n",
              "2  1/3/2554        30.3684  1/3/2554           2.50  1/3/2554      36.00   \n",
              "3  1/4/2554        30.0541  1/4/2554           2.75  1/4/2554      36.21   \n",
              "4  1/5/2554        30.2456  1/5/2554           2.75  1/5/2554      36.28   \n",
              "\n",
              "       Date  SET100Index  \n",
              "0  1/1/2554      1506.94  \n",
              "1  1/2/2554      1605.25  \n",
              "2  1/3/2554      1682.40  \n",
              "3  1/4/2554      1642.80  \n",
              "4  1/5/2554      1587.31  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-28dd3149-d877-45f8-a3a0-248df41160da\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date_x</th>\n",
              "      <th>Months</th>\n",
              "      <th>ข้าว</th>\n",
              "      <th>ยางพารา</th>\n",
              "      <th>มันสำปะหลัง</th>\n",
              "      <th>Date_y</th>\n",
              "      <th>Exchange rate</th>\n",
              "      <th>Date_x</th>\n",
              "      <th>Interest rate</th>\n",
              "      <th>Date_y</th>\n",
              "      <th>Oil Price</th>\n",
              "      <th>Date</th>\n",
              "      <th>SET100Index</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2554-01-01 00:00:00</td>\n",
              "      <td>1</td>\n",
              "      <td>15536428007</td>\n",
              "      <td>36513515829</td>\n",
              "      <td>5789775035</td>\n",
              "      <td>1/1/2554</td>\n",
              "      <td>30.5839</td>\n",
              "      <td>1/1/2554</td>\n",
              "      <td>2.25</td>\n",
              "      <td>1/1/2554</td>\n",
              "      <td>58.20</td>\n",
              "      <td>1/1/2554</td>\n",
              "      <td>1506.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2554-02-01 00:00:00</td>\n",
              "      <td>2</td>\n",
              "      <td>14717660237</td>\n",
              "      <td>40694496193</td>\n",
              "      <td>7440822287</td>\n",
              "      <td>1/2/2554</td>\n",
              "      <td>30.7164</td>\n",
              "      <td>1/2/2554</td>\n",
              "      <td>2.25</td>\n",
              "      <td>1/2/2554</td>\n",
              "      <td>57.07</td>\n",
              "      <td>1/2/2554</td>\n",
              "      <td>1605.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2554-03-01 00:00:00</td>\n",
              "      <td>3</td>\n",
              "      <td>20183614418</td>\n",
              "      <td>47683834428</td>\n",
              "      <td>8758253202</td>\n",
              "      <td>1/3/2554</td>\n",
              "      <td>30.3684</td>\n",
              "      <td>1/3/2554</td>\n",
              "      <td>2.50</td>\n",
              "      <td>1/3/2554</td>\n",
              "      <td>36.00</td>\n",
              "      <td>1/3/2554</td>\n",
              "      <td>1682.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2554-04-01 00:00:00</td>\n",
              "      <td>4</td>\n",
              "      <td>15096164762</td>\n",
              "      <td>31135906606</td>\n",
              "      <td>4788642446</td>\n",
              "      <td>1/4/2554</td>\n",
              "      <td>30.0541</td>\n",
              "      <td>1/4/2554</td>\n",
              "      <td>2.75</td>\n",
              "      <td>1/4/2554</td>\n",
              "      <td>36.21</td>\n",
              "      <td>1/4/2554</td>\n",
              "      <td>1642.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2554-05-01 00:00:00</td>\n",
              "      <td>5</td>\n",
              "      <td>21296515946</td>\n",
              "      <td>34338915105</td>\n",
              "      <td>7099610188</td>\n",
              "      <td>1/5/2554</td>\n",
              "      <td>30.2456</td>\n",
              "      <td>1/5/2554</td>\n",
              "      <td>2.75</td>\n",
              "      <td>1/5/2554</td>\n",
              "      <td>36.28</td>\n",
              "      <td>1/5/2554</td>\n",
              "      <td>1587.31</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28dd3149-d877-45f8-a3a0-248df41160da')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-28dd3149-d877-45f8-a3a0-248df41160da button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-28dd3149-d877-45f8-a3a0-248df41160da');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **แสดง Columns ที่สนใจ**"
      ],
      "metadata": {
        "id": "e6JrXhY3rNiZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_export = merged_4[['Months','ข้าว','ยางพารา','มันสำปะหลัง','Exchange rate','Interest rate','Oil Price','SET100Index']]\n",
        "data_export  # print data ดูว่ามันหน้าตาเป็นยังไง"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "WuJX_1K6rLmy",
        "outputId": "71dd6996-d04e-428c-d174-862f98a0b8cd"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Months         ข้าว      ยางพารา  มันสำปะหลัง  Exchange rate  \\\n",
              "0         1  15536428007  36513515829   5789775035        30.5839   \n",
              "1         2  14717660237  40694496193   7440822287        30.7164   \n",
              "2         3  20183614418  47683834428   8758253202        30.3684   \n",
              "3         4  15096164762  31135906606   4788642446        30.0541   \n",
              "4         5  21296515946  34338915105   7099610188        30.2456   \n",
              "..      ...          ...          ...          ...            ...   \n",
              "130     131  12771322292  17238310426   9641096643        33.0958   \n",
              "131     132  12522650304  17844354831  13270649692        33.5647   \n",
              "132     133   7431170164  17374340466  11855470749        33.2395   \n",
              "133     134   9675354365  16427316475  11906795209        32.6737   \n",
              "134     135  10375363830  18843921424  13891294311        33.2516   \n",
              "\n",
              "     Interest rate  Oil Price  SET100Index  \n",
              "0             2.25      58.20      1506.94  \n",
              "1             2.25      57.07      1605.25  \n",
              "2             2.50      36.00      1682.40  \n",
              "3             2.75      36.21      1642.80  \n",
              "4             2.75      36.28      1587.31  \n",
              "..             ...        ...          ...  \n",
              "130           0.50      44.90      2265.16  \n",
              "131           0.50      46.76      2259.88  \n",
              "132           0.50      54.27      2305.32  \n",
              "133           0.50      48.75      2313.46  \n",
              "134           0.50      53.36      2250.62  \n",
              "\n",
              "[135 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9fcdcbfc-7a66-4102-9296-4826a16bd380\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Months</th>\n",
              "      <th>ข้าว</th>\n",
              "      <th>ยางพารา</th>\n",
              "      <th>มันสำปะหลัง</th>\n",
              "      <th>Exchange rate</th>\n",
              "      <th>Interest rate</th>\n",
              "      <th>Oil Price</th>\n",
              "      <th>SET100Index</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>15536428007</td>\n",
              "      <td>36513515829</td>\n",
              "      <td>5789775035</td>\n",
              "      <td>30.5839</td>\n",
              "      <td>2.25</td>\n",
              "      <td>58.20</td>\n",
              "      <td>1506.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>14717660237</td>\n",
              "      <td>40694496193</td>\n",
              "      <td>7440822287</td>\n",
              "      <td>30.7164</td>\n",
              "      <td>2.25</td>\n",
              "      <td>57.07</td>\n",
              "      <td>1605.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>20183614418</td>\n",
              "      <td>47683834428</td>\n",
              "      <td>8758253202</td>\n",
              "      <td>30.3684</td>\n",
              "      <td>2.50</td>\n",
              "      <td>36.00</td>\n",
              "      <td>1682.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>15096164762</td>\n",
              "      <td>31135906606</td>\n",
              "      <td>4788642446</td>\n",
              "      <td>30.0541</td>\n",
              "      <td>2.75</td>\n",
              "      <td>36.21</td>\n",
              "      <td>1642.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>21296515946</td>\n",
              "      <td>34338915105</td>\n",
              "      <td>7099610188</td>\n",
              "      <td>30.2456</td>\n",
              "      <td>2.75</td>\n",
              "      <td>36.28</td>\n",
              "      <td>1587.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>131</td>\n",
              "      <td>12771322292</td>\n",
              "      <td>17238310426</td>\n",
              "      <td>9641096643</td>\n",
              "      <td>33.0958</td>\n",
              "      <td>0.50</td>\n",
              "      <td>44.90</td>\n",
              "      <td>2265.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>132</td>\n",
              "      <td>12522650304</td>\n",
              "      <td>17844354831</td>\n",
              "      <td>13270649692</td>\n",
              "      <td>33.5647</td>\n",
              "      <td>0.50</td>\n",
              "      <td>46.76</td>\n",
              "      <td>2259.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>132</th>\n",
              "      <td>133</td>\n",
              "      <td>7431170164</td>\n",
              "      <td>17374340466</td>\n",
              "      <td>11855470749</td>\n",
              "      <td>33.2395</td>\n",
              "      <td>0.50</td>\n",
              "      <td>54.27</td>\n",
              "      <td>2305.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>134</td>\n",
              "      <td>9675354365</td>\n",
              "      <td>16427316475</td>\n",
              "      <td>11906795209</td>\n",
              "      <td>32.6737</td>\n",
              "      <td>0.50</td>\n",
              "      <td>48.75</td>\n",
              "      <td>2313.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>135</td>\n",
              "      <td>10375363830</td>\n",
              "      <td>18843921424</td>\n",
              "      <td>13891294311</td>\n",
              "      <td>33.2516</td>\n",
              "      <td>0.50</td>\n",
              "      <td>53.36</td>\n",
              "      <td>2250.62</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>135 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9fcdcbfc-7a66-4102-9296-4826a16bd380')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9fcdcbfc-7a66-4102-9296-4826a16bd380 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9fcdcbfc-7a66-4102-9296-4826a16bd380');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **ตรวจสอบค่า Missing ของตาราง data_export**"
      ],
      "metadata": {
        "id": "wMXylJ3ZrRLd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_export.isnull().any() # ดูว่าคอลัมน์ไหนมีค่า missing บ้าง สรุปคือทุกคอลัมน์ไม่มีค่า  missing"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_NpVPV9SrPBS",
        "outputId": "04294ff2-804a-4c90-e9f6-604ff8a9e98c"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Months           False\n",
              "ข้าว             False\n",
              "ยางพารา          False\n",
              "มันสำปะหลัง      False\n",
              "Exchange rate    False\n",
              "Interest rate    False\n",
              "Oil Price        False\n",
              "SET100Index      False\n",
              "dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_export.isnull().sum() # จะต้องได้ค่าเป็น 0 (คือไม่มีข้อมูลสูญหาย)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cdmOTJlJrTD-",
        "outputId": "0ec9210b-808a-4415-86d6-b74ee6e6b2e8"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Months           0\n",
              "ข้าว             0\n",
              "ยางพารา          0\n",
              "มันสำปะหลัง      0\n",
              "Exchange rate    0\n",
              "Interest rate    0\n",
              "Oil Price        0\n",
              "SET100Index      0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_export.shape # ตรวจสอบขนาดของข้อมูลว่ามีกี่แถว กี่คอลัมน์ ได้เป็น (135, 8) ก็คือมี 135 เดือน 8 คอลัมน์ ได้แก่ มูลค่าการส่งออกข้าว, มูลค่าการส่งออกยางพารา, มูลค่าการส่งออกมันสำปะหลัง, อัตราแลกเปลี่ยน, อัตราดอกเบี้ย, ราคาน้ำมัน และดัชนี SET 100"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kehn7ezSrUgw",
        "outputId": "8bd51b73-31d2-4ffb-d926-2e52e6a45ea3"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(135, 8)"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import DataFrame\n",
        "from pandas import concat"
      ],
      "metadata": {
        "id": "z82c_tm2rX7-"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def series_to_supervised(data, n_in=1, n_out=1,dropnan=True,feat_name=None):\n",
        "    n_vars = 1 if type(data) is list else data.shape[1]\n",
        "    df = pd.DataFrame(data)\n",
        "    cols, names = list(), list()\n",
        "\n",
        "    # input sequence (t-n, ... t-1)\n",
        "    for i in range(n_in, 0, -1):\n",
        "        cols.append(df.shift(i))\n",
        "        names += [f'{feat_name[j]}(t-{i}l)' for j in range(n_vars)]\n",
        "\n",
        "    # forecast sequence (t, t+1, ... t+n)\n",
        "    for i in range(O, n_out):\n",
        "        cols.append(df.shift(-i))\n",
        "        if i == 0:\n",
        "            names += [f'{feat_name[j]}(t)' for j in range(n_vars)]\n",
        "        else:\n",
        "            names += [f'{feat_name[j]}(t+{i})' for j in range(n_vars)]\n",
        "\n",
        "    # put it all together\n",
        "    agg = pd.concat(cols, axis=1)\n",
        "    agg.columns = names\n",
        "\n",
        "    # drop rows with NaN values\n",
        "    if dropnan:\n",
        "        agg.dropna(inplace=True)\n",
        "    return agg\n",
        "\n",
        "# function สำหรับ reshape ข้อมูลและทำการ fit ข้อมูลเข้ากับแบบจำลอง\n",
        "def fit_Istm(train, n_lag, n_ahead, n_batch, nb_epoch, n_neurons):\n",
        "    # reshape training into [samples, timesteps, features]\n",
        "    X, y = train[:, :-n_ahead], train[:, -n_ahead:]\n",
        "    X = X.reshape(X.shape[0], n_lag, int(X.shape[1]/n_lag))\n",
        "\n",
        "    # design network\n",
        "    model = Sequential()\n",
        "    model.add(LSTM(n_neurons, batch_input_shape=(n_batch, X.shape[1], X.shape[2]), stateful=True))\n",
        "    model.add(Dense(n_ahead))\n",
        "    model.compile(loss='mean_squared_error', optimizer='RMSprop')\n",
        "\n",
        "# fit network\n",
        "    for i in range(nb_epoch):\n",
        "        model.fit(x, y, epochs=10, batch_size=n_batch, verbose=2,shuffle=False)\n",
        "        model.reset_states()\n",
        "    return model\n",
        "\n",
        "#function สำหรับ ทำนายข้อมูล\n",
        "def forecast_lstm(model, X, n_batch, n_lag):\n",
        "    # reshape input pattern to [samples, timesteps, features]\n",
        "    X = X.reshape(1,n_lag,int(len(X)/n_lag))\n",
        "    # make forecast\n",
        "    forecast = model.predict(X, batch_size=n_batch)\n",
        "    # convert to array\n",
        "    return [x for x in forecast[0, :]]\n",
        "def make_forecasts(model, n_batch, train, test, n_lag, n_ahead):\n",
        "    forecasts = list()\n",
        "    for i in range(len(test)):\n",
        "        X = test[i, :-n_ahead]\n",
        "        # make forecast\n",
        "        forecast = forecast_lstm(model, X, n_batch, n_lag)\n",
        "        # store the forecast\n",
        "        forecasts.append(forecast)\n",
        "    return forecasts\n",
        "\n",
        "# function สำหรับการประเมินประสิทธิภาพของแบบจำลองโดยใช้ RMSE\n",
        "def evaluate_forecasts1(y, forecasts, n_lag, n_seq):\n",
        "    for i in range(n_seq):\n",
        "        actual = [row[i] for row in y]\n",
        "        [forecast[i] for forecast in forecasts]\n",
        "        rmse = sqrt(mean_squared_error(actual, predicted))\n",
        "        print('t+%od RMSE: %f' % ((i+1), rmse))\n",
        "\n",
        "#function สำหรับประเมินประสิทธิภาพของแบบจำลองโดยใช้ MAE\n",
        "def evaluate_forecasts2(y, forecasts, n_lag, n_seq): \n",
        "    for i in range(n_seq):\n",
        "        actual = [row[i] for row in y]\n",
        "        predicted = [forecast[i] for forecast in forecasts]\n",
        "        mae = mean_absolute_error(actual, predicted)\n",
        "        print('t+%d MAE: %f' % ((i+1), mae))\n",
        "\n",
        "#เปลี่ยนชื่อตัวแปรที่ใช้เรียก\n",
        "df = pd.DataFrame(data)\n",
        "df_drop1 = df\n",
        "\n",
        "# ทำ scaling ข้อมูลด้วยวิธี min max scaling\n",
        "min_dict = dict()\n",
        "max_dict = dict()\n",
        "for col in df.columns:\n",
        "    min_dict[col] = df[col].min()\n",
        "    max_dict[col] = df[col].max()\n",
        "    df[col] = (df[col]-df[col].min())/(df[col].max()-df[col].min())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 260
        },
        "id": "xdVZZyixrbia",
        "outputId": "c85d1ebc-211d-4ca3-c2d6-c891f0277ff6"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "error",
          "ename": "OutOfBoundsDatetime",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mOutOfBoundsDatetime\u001b[0m                       Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-52-8903feb53669>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     88\u001b[0m     \u001b[0mmin_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     89\u001b[0m     \u001b[0mmax_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 90\u001b[0;31m     \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/ops/common.py\u001b[0m in \u001b[0;36mnew_method\u001b[0;34m(self, other)\u001b[0m\n\u001b[1;32m     67\u001b[0m         \u001b[0mother\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mitem_from_zerodim\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     68\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 69\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     70\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     71\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mnew_method\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/arraylike.py\u001b[0m in \u001b[0;36m__sub__\u001b[0;34m(self, other)\u001b[0m\n\u001b[1;32m     98\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0munpack_zerodim_and_defer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"__sub__\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     99\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__sub__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 100\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_arith_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moperator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msub\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    101\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    102\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0munpack_zerodim_and_defer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"__rsub__\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m_arith_method\u001b[0;34m(self, other, op)\u001b[0m\n\u001b[1;32m   5520\u001b[0m         \u001b[0mlvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_values\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5521\u001b[0m         \u001b[0mrvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mextract_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mextract_numpy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mextract_range\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5522\u001b[0;31m         \u001b[0mrvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmaybe_prepare_scalar_for_op\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlvalues\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5523\u001b[0m         \u001b[0mrvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mensure_wrapped_if_datetimelike\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrvalues\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5524\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/ops/array_ops.py\u001b[0m in \u001b[0;36mmaybe_prepare_scalar_for_op\u001b[0;34m(obj, shape)\u001b[0m\n\u001b[1;32m    465\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mdatetime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdatetime\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    466\u001b[0m         \u001b[0;31m# cast up to Timestamp to rely on Timestamp implementation, see Timedelta above\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 467\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mTimestamp\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    468\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdatetime64\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    469\u001b[0m         \u001b[0;31m# GH#28080 numpy casts integer-dtype to datetime64 when doing\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/_libs/tslibs/timestamps.pyx\u001b[0m in \u001b[0;36mpandas._libs.tslibs.timestamps.Timestamp.__new__\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/_libs/tslibs/conversion.pyx\u001b[0m in \u001b[0;36mpandas._libs.tslibs.conversion.convert_to_tsobject\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/_libs/tslibs/conversion.pyx\u001b[0m in \u001b[0;36mpandas._libs.tslibs.conversion.convert_datetime_to_tsobject\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/_libs/tslibs/np_datetime.pyx\u001b[0m in \u001b[0;36mpandas._libs.tslibs.np_datetime.check_dts_bounds\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;31mOutOfBoundsDatetime\u001b[0m: Out of bounds nanosecond timestamp: 2554-01-01 00:00:00"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "JKqhnaspveWr"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}